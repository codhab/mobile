.ui.grid
  .two.wide.mobile.column
    %a{href: "#{entity.indications_path}"}
      %i.big.arrow.left.icon
  .thirteen.wide.mobile.column.text-center
    .title-header Indicação
    .sub-title
      Formulário de indicação
.ui.container
  - if ::Entity::EnterpriseTerm.find_by(enterprise_id: @enterprise.id, entity_id: current_entity.id).nil? && @enterprise.required_term && params[:term] == 1
  
    %p CONTEUDO DO TERMO

    %br/
    %br/
    = link_to "Li e aceito os termos acima", entity.indication_accept_term_path(@enterprise), class: 'btn btn-success btn-block btn-lg', data: { confirm: 'Tem certeza que deseja aceitar os termos?'}
  
  - else
    %table.ui.celled.table
      %tbody
        %tr
          %td
          %td.text-center
            %h3 #{@enterprise.name}
            
            = simple_form_for @indication, url: indications_path(enterprise_id: @enterprise.id) do |f|
              = f.input :enterprise_id, as: :hidden, input_html: { value: f.object.enterprise_id.blank? ? params[:enterpise_id] : f.object.enterprise_id  }
              = f.input :cpf, label: "CPF", placeholder: "Informe o CPF do candidato", input_html: { class: 'cpf'}
           
              - if @indication.cpf_create
                = link_to "Deseja cadastrar o candidato?", new_provisional_cadastre_path(enterprise_id: @enterprise.id), class: 'ui button blue fluid'
                /= f.submit "Indicar candidato", class: 'ui button green fluid'
              - else
                = f.submit "Indicar candidato", class: 'ui button green fluid'
                  %hr/
          %td.text-center
            %br/
            %h4 Qtd. de unidades disponíveis (#{(@enterprise.units - @enterprise.candidates.where('inactive is false').count) rescue 0})
            %br/
            %br/
            %b Novos cadastros realizados (#{Entity::ProvisionalCandidate.where(entity_id: current_entity.id).count})
            %br/
            %b Indicações realizadas (#{@enterprise.candidates.count})
              %td.text-center
                Ativas (#{@enterprise.candidates.where('inactive is false').count})
                |
                Inativas (#{@enterprise.candidates.where('inactive is true').count})

          %td
            %h4 Novos cadastros
            - if Entity::ProvisionalCandidate.where(entity_id: current_entity.id).present?
              - Entity::ProvisionalCandidate.where(entity_id: current_entity.id).each do |pr|
                - cadastre = Core::Candidate::Cadastre.find(pr.candidate_id) rescue nil
                %td
                %td
                  %p
                    %b= cadastre.name rescue nil
                  %p
                    %b= cadastre.cpf rescue nil
                  %p
                    .ui.label.blue
                      Novo cadastro
                    .ui.label.black
                      = cadastre.cadastre_situations.last.situation_status.name rescue nil
          - if @enterprise.candidates.present?
            %td
              %br/
              %h4 Indicações
              - @enterprise.candidates.order('created_at DESC').each do |log|
                %tr
                  %td
                  %td
                    %p
                      %b= log.cadastre.name rescue nil
                    %p= log.cadastre.cpf  rescue nil
                    %p
                      - if log.inactive
                        .ui.label.red
                          Indicação inativa
                      - else
                        .ui.label.green
                          Indicação ativa
                    %p= log.created_at.strftime("%d/%m/%Y %H:%M")  rescue nil
